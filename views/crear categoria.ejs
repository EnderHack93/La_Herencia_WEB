<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>La Herencia</title>
  <link rel="stylesheet" type="text/css" href="/css/miestilacho.css">
  <link rel="stylesheet" href="/css/productos/crearProductos.css">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous">
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
  <style>
    #customers {
      font-family: Arial, Helvetica, sans-serif;
      border-collapse: collapse;
      width: 100%;
    }

    #customers td,
    #customers th {
      border: 1px solid #ddd;
      padding: 8px;
    }

    #customers tr:nth-child(even) {
      background-color: #f2f2f2;
    }

    #customers tr:hover {
      background-color: #ddd;
    }

    #customers th {
      padding-top: 12px;
      padding-bottom: 12px;
      text-align: left;
      background-color: #b31b07;
      color: white;
    }

    .sidebarinterno {
      position: relative;
      top: -120px;
      width: 90%;
    }
  </style>

  <style>
    /* Estilo para el fondo oscuro detrás del modal */
    .overlay {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.5);
    }

    /* Estilos para el modal */
    .modal {
      display: none;
      padding-top: 30%;
      background: rgba(255, 255, 255, 0.486);
      z-index: 1000;
    }

    /* Estilo para el botón de cerrar el modal */
    .close-btn {
      position: absolute;
      top: 10px;
      right: 10px;
      cursor: pointer;
    }
  </style>
</head>

<body>

  <div class="sidebarinterno">
    <%-include('../views/layouts/sidebar.ejs')%>

  </div>
  <!--Productos-->

  <div class="productsBox">
    <div class="products">

      <div class="detailsProducts">
        <div class="listProducts">
          <div>
            <h1>Lista de productos</h1>
          </div>
          <div>
            <button id="crearProductoModal" class="btn btn-primary mb-3" onclick="abrirModal()">Crear Nuevo</button>

          </div>

          <table id="customers">
            <tr>
              <th>ID</th>
              <th>Nombre</th>
              <th>Acciones</th>
            </tr>
            <% for (const categoria of categorias) { %>
            <tr class="product-row" data-product-id="<%= categoria._id %>">
              <td><%= categoria.id_categoria%></td>
              <td><%= categoria.nombre %></td>

              <td>
                <button type="button" class="btn btn-primary btn-edit" data-product-id="<%= categoria.id_categoria %>" data-toggle="modal" data-target="#editModal" onclick="abrirModaleditar(this)"><i class="bi bi-pencil"></i></button>


                <button type="button" class="btn btn-danger btn-desactivar" data-product-id="<%= categoria.id_categoria %>"><i class="bi bi-x-circle"></i></button>
              </td>
            </tr>
            <% } %>
          </table>
        </div>
      </div>
    </div>
  </div>
  </div>



  <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
  <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

  <script>
    //abrir formulario
    function abrir() {
      document.getElementById("formularioProducto").style.display = "block";
    }


    //Menu toggle
    let toggle = document.querySelector('.toggle');
    let navigation = document.querySelector('.navigation');
    let main = document.querySelector('main');

    toggle.onclick = function() {
      navigation.classList.toggle('active');
      main.classList.toggle('active');
    }


    //Hovered class in selected list item
    let list = document.querySelectorAll('.navigation li');

    function activeLink() {
      list.forEach((item) => item.classList.remove('hovered'));
      this.classList.add('hovered');
    }
    list.forEach((item) => item.addEventListener('mouseover', activeLink));
  </script>



  <!-- Modal de creación -->
  <div class="overlay" id="overlay"></div>

  <center>

    <div class="modal align-items-center" id="modal">
      <div class="card w-50">
        <div class="card-header">
          <h4>Crear Categoria</h4>
        </div>
        <div class="card-body">

          <form action="/crearcategorias" method="post">
            <!-- Campos del formulario de creación -->
            <label for="nombre" class="mb-2">Nombre de la categoria</label>
            <input type="text" id="nombre" class="form-control mb-3" placeholder="Nombre categoria" name="nombre" required>
            <button type="submit" class="btn btn-primary">Crear</button>
            <div class="btn btn-danger" onclick="cerrarModal()">Cerrar</div>
          </form>
        </div>
      </div>
    </div>
  </center>
  <!--Modal de edicion-->
  <!-- Modal de edicion -->


  <div class="overlay" id="overlayeditar"></div>

  <div class="modal" id="modaleditar">

    <center>
      <div class="card w-50">
        <div class="card-header">
          <h4>Categorias</h4>
        </div>
        <div class="card-body">


          <form id="editarForm" class="form">
            <input type="hidden" class="form-label" name="id_producto" id="editIdProducto" value="" />
            <!-- Agrega IDs a los campos del formulario -->
            <label>
              <span class="mb-5">Nombre de la categoria</span>
              <input type="text" class="form-control mt-2" name="nombreeditar" id="editNombre" placeholder="Nombre de la categoria" class="input" />
            </label>


            <button type="button" class="btn btn-primary" onclick="guardarCambios()">Guardar Cambios</button>
            <div class="btn btn-danger" onclick="cerrarModaleditar()">Cerrar</div>
          </form>

        </div>
      </div>
    </center>
  </div>


  <script>
    function abrirModal() {
      document.getElementById("overlay").style.display = "block";
      document.getElementById("modal").style.display = "block";
    }

    function cerrarModal() {
      document.getElementById("overlay").style.display = "none";
      document.getElementById("modal").style.display = "none";
    }

    function obtenerProductoPorId(productId, callback) {

      $.ajax({
        type: "GET",
        url: `https://herencia-api.onrender.com/categorias/${productId}`,
        success: function(response) {
          callback(response.product);
          console.log(response)
        },
        error: function(error) {
          console.error(error);
          console.log(error)
        },
      });
    }

    // Abre el modal y carga los detalles del producto
    function obtenerProductoPorId(productId) {
      return new Promise(function(resolve, reject) {
        $.ajax({
          type: "GET",
          url: `https://herencia-api.onrender.com/categorias/${productId}`,
          success: function(response) {
            console.log("Respuesta de la API:", response);

            // Verifica si la respuesta contiene datos válidos
            if (response && response.id_categoria !== undefined && response.id_categoria !== null) {
              resolve(response);
            } else {
              reject("La respuesta del servidor no contiene datos válidos para el producto.");
            }
          },
          error: function(error) {
            reject("Error al procesar los datos del producto: " + JSON.stringify(error));
          },
        });
      });
    }




    // Abre el modal y carga los detalles del producto
    function abrirModaleditar(btn) {
      document.getElementById("overlayeditar").style.display = "block";
      document.getElementById("modaleditar").style.display = "block";

      // Obtén el ID del producto desde el botón
      const productIdToEdit = $(btn).data("product-id");
      console.log("Empezando el AJAX para el producto con ID:", productIdToEdit);
      // Realiza una solicitud AJAX para obtener los detalles del producto
      obtenerProductoPorId(productIdToEdit)
        .then((product) => {
          console.log("Datos del producto obtenidos con éxito:", product);

          // Verifica si la respuesta contiene datos válidos
          if (product && product.id_categoria !== undefined && product.id_categoria !== null) {
            const {
              nombre
            } = product;

            console.log("Nombre:", nombre);

            $("#editNombre").val(nombre);
            $("#editIdProducto").val(productIdToEdit);
          } else {
            console.error("La respuesta del servidor no contiene datos válidos para el producto.");
          }
        })
        .catch((error) => {
          console.error("Error al obtener los detalles del producto:", error);
        });
    }

    // Cierra el modal de edición
    function cerrarModaleditar() {
      document.getElementById("overlayeditar").style.display = "none";
      document.getElementById("modaleditar").style.display = "none";
    }

    function guardarCambios() {
      const idProducto = $("#editIdProducto").val();
      const nombre = $("#editNombre").val();


      const formData = new FormData();
      formData.append("id_categoria", idProducto);
      formData.append("nombre", nombre);

      // Configuración para realizar una solicitud PUT
      $.ajax({
        type: "PUT",
        url: `https://herencia-api.onrender.com/categorias/${idProducto}`,
        data: formData,
        contentType: false,
        processData: false,
        success: function(response) {
          cerrarModaleditar();
          location.reload();
        },
        error: function(error) {
          console.error("Error al actualizar los datos:", error);
        },
      });
    }
  </script>

</body>
<script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>
<script>
  $(".btn-desactivar").on("click", function() {
    const productId = $(this).data("product-id");

    Swal.fire({
      title: "Desactivar Categoria?",
      icon: "error",
      confirmButtonText: "Desactivar",
      confirmButtonColor: "red",
      showCancelButton: true,
      cancelButtonText: "Cancelar",
      cancelButtonColor: "blue",
      showLoaderOnConfirm: true,
      preConfirm: async (ojo) => {
        $.ajax({
          type: "DELETE",
          url: `https://herencia-api.onrender.com/categorias/${productId}`,
          success: function(response) {

          },
          error: function(error) {
            console.error("Error al eliminar el producto:", error);
          }
        })
      }

    }).then((result) => {
      if (result.isConfirmed) {
        Swal.fire({
            title:"Categoria Desactivada",
            icon:"success",
            showConfirmButton: false,
            timer: 2000
        })
        location.reload();
      }
    })
  });
</script>

</body>

</html>