<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>La Herencia</title>
    <link rel="stylesheet" type="text/css" href="/css/miestilacho.css">
    <link rel="stylesheet" href="/css/productos/crearProductos.css">
    <script src="https://code.jquery.com/jquery-3.3.1.min.js"></script>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">
    <style>
        #customers {
          font-family: Arial, Helvetica, sans-serif;
          border-collapse: collapse;
          width: 100%;
        }
        
        #customers td, #customers th {
          border: 1px solid #ddd;
          padding: 8px;
        }
        
        #customers tr:nth-child(even){background-color: #f2f2f2;}
        
        #customers tr:hover {background-color: #ddd;}
        
        #customers th {
          padding-top: 12px;
          padding-bottom: 12px;
          text-align: left;
          background-color: #b31b07;
          color: white;
        }
        .sidebarinterno{
          position: relative;
          top: -120px;
          width: 90%;
        }
        </style>

        <style>
                    /* Estilo para el fondo oscuro detrás del modal */
          .overlay {
              display: none;
              position: fixed;
              top: 0;
              left: 0;
              width: 100%;
              height: 100%;
              background: rgba(0, 0, 0, 0.5);
          }

          /* Estilos para el modal */
          .modal {
              display: none;
              position: fixed;
              top: 50%;
              left: 50%;
              transform: translate(-50%, -50%);
              padding: 20px;
              background: #fff;
              z-index: 1000;
          }

          /* Estilo para el botón de cerrar el modal */
          .close-btn {
              position: absolute;
              top: 10px;
              right: 10px;
              cursor: pointer;
          }



        </style>
</head>
<body>

    <div class="sidebarinterno">
        <%-include('../views/layouts/sidebar.ejs')%>
      
    </div>
        <!--Productos-->

        <div class="productsBox">
            <div class="products">
                
                <div class="detailsProducts">
                    <div class="listProducts">
                        <div>
                            <h1>Lista de productos</h1>
                        </div>
                        <div>
                            <button id="crearProductoModal"  onclick="abrirModal()">NUEVO Pedido</button>
                        </div>
                    
                        <table id="customers">
                        <tr>
                            <th>ID del pedido</th>
                            <th>Fecha</th>
                            <th>Hora</th>
                            <th>Estado</th>
                            <th>Cliente</th>
                            <th>Acciones</th>
                        </tr>
                        <% for (const pedido of pedidos) { %>
                            <tr class="product-row" data-product-id="<%= pedido.id_pedido %>">
                                <td><%= pedido.id_pedido %></td>
                                <td><%= pedido.fecha %></td>
                                <td><%= pedido.hora %></td>
                                <td><%= pedido.estado %></td>
                                <td><%= pedido.id_cliente %></td>
                              <td>
                                <button type="button" class="btn btn-primary btn-edit" data-toggle="modal" data-target="#editModal" data-product-id="<%= pedidos._id %>"><i class="bi bi-pencil"></i></button>
                                <button type="button" class="btn btn-primary btn-edit" data-product-id="<%= pedido.id_pedido %>" data-toggle="modal" data-target="#editModal" onclick="abrirModaleditar(this)"><i class="bi bi-eye"></i></button>
                  
                  
                                <button type="button" class="btn btn-danger" data-product-id="<%= pedidos.id_pedido %>"><i class="bi bi-x-circle"></i></button>
                              </td>
                            </tr>
                          <% } %>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>

    

    <script type="module" src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.esm.js"></script>
    <script nomodule src="https://unpkg.com/ionicons@7.1.0/dist/ionicons/ionicons.js"></script>

    <script>

        //abrir formulario
        function abrir(){
            document.getElementById("formularioProducto").style.display="block";
        }


        //Menu toggle
        let toggle = document.querySelector('.toggle');
        let navigation = document.querySelector('.navigation');
        let main = document.querySelector('main');

        toggle.onclick = function(){
            navigation.classList.toggle('active');
            main.classList.toggle('active');
        }


        //Hovered class in selected list item
        let list = document.querySelectorAll('.navigation li');
        function activeLink(){
            list.forEach((item) => item.classList.remove('hovered'));
            this.classList.add('hovered');
        }
        list.forEach((item) => item.addEventListener('mouseover',activeLink));
    </script>

       
<!--modal para editar-->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog" aria-labelledby="editModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="editModalLabel">Editar Producto</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <div class="modal-body">
          <!-- Aquí colocarás los campos de edición, por ejemplo: -->
          <form id="editForm" enctype="multipart/form-data">
            <label for="editNombre">Nombre de categoria</label>
            <input type="text" id="editNombre" name="nombre" class="form-control">
            
            <label for="editDescripcion">Descripción</label>
            <input type="text" id="editDescripcion" name="descripcion" class="form-control">
            
            <label for="editPrecio">Precio</label>
            <input type="text" id="editPrecio" name="precio" class="form-control">
          
            <!-- Imagen antigua -->
            <img id="editPreviewImage" src="" alt="Preview Image" style="max-width: 400px; max-height: 400px; display: none">
            
            <!-- Input para cargar una nueva imagen -->
            <input type="file" name="nuevaImagen" id="editNuevaImagen" class="input" enctype="multipart/form-data" />
  
          </form>        
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Cerrar</button>
          <button type="button" class="btn btn-primary" id="saveChanges">Guardar Cambios</button>
        </div>
      </div>
    </div>
  </div>
  <!--modal para crear-->

  <!-- Modal de creación -->
  <!-- Modal de creación -->
  <div class="overlay" id="overlay"></div>

  <div class="modal" id="modal">
    <div class="close-btn" onclick="cerrarModal()">&times;</div>
    <form action="/crearcategorias" method="post">
    <!-- Campos del formulario de creación -->
    <label for="nombre">Nombre de la categoria</label>
    <input type="text" id="nombre" name="nombre" required>
    <input type="submit">
  </form>
</div>

  
<!--modal de edicion-->
<div class="overlay" id="overlayeditar"></div>

<div class="modal" id="modaleditar">
    <div class="close-btn" onclick="cerrarModaleditar()">&times;</div>

    <div class="productsBox">
        <div class="products">
            <section class="form-register">
                <div>
                    <h1>Productos</h1>
                </div>
                <p><strong>Productos:</strong> <span id="editProductos"></span></p>
                <p><strong>Precio Total:</strong> <span id="editPrecioTotal"></span></p>
                <p><strong>Cliente:</strong> <span id="editCliente"></span></p>
                <p><strong>Fecha:</strong> <span id="editFecha"></span></p>
                <p><strong>Hora:</strong> <span id="editHora"></span></p>
                <p><strong>Estado:</strong> <span id="editEstado"></span></p>
                
            </section>
        </div>
    </div>
</div>
<!-- Resto de tu contenido y scripts -->

<script>
function abrirModal() {
    document.getElementById("overlay").style.display = "block";
    document.getElementById("modal").style.display = "block";
}

function cerrarModal() {
    document.getElementById("overlay").style.display = "none";
    document.getElementById("modal").style.display = "none";
}

function obtenerdetallepedidoPorId(productId) {
    return new Promise(function (resolve, reject) {
        $.ajax({
            type: "GET",
            url: `https://herencia-api.onrender.com/detallepedidos/${productId}`,
            success: function (response) {
                console.log("Respuesta de la API (Detalle Pedido):", response);

                // Verifica si la respuesta contiene datos válidos
                if (response && response.length > 0) {
                    const detallesProducto = response.map(detalle => ({
                        cantidad: detalle.cantidad,
                        precioTotal: detalle.precioTotal,
                        precioUnitario: detalle.precioUnitario,
                        idPedido: detalle.id_pedido, // Agregamos el ID del pedido
                        idProducto: detalle.id_producto // Agregamos el ID del producto
                    }));

                    console.log("respuestita de la api:", detallesProducto);
                    resolve(detallesProducto);
                } else {
                    reject(`La respuesta del servidor no contiene datos válidos para el detalle del pedido. Datos recibidos: ${JSON.stringify(response)}`);
                }
            },
            error: function (error) {
                reject(`Error al procesar los datos del detalle del pedido: ${JSON.stringify(error)}`);
            },
        });
    });
}




// Función para obtener detalles del pedido por su ID

function obtenerDetallesPedido(idPedido) {
    return new Promise(function (resolve, reject) {
        $.ajax({
            type: "GET",
            url: `https://herencia-api.onrender.com/pedidos/${idPedido}`,
            success: function (response) {
                console.log("Respuesta de la API (Pedido):", response);

                // Verifica si la respuesta contiene datos válidos
                if (response && response.id_cliente !== undefined && response.id_cliente !== null) {
                    resolve({
                        id_cliente: response.id_cliente,
                        fecha: response.fecha,
                        hora: response.hora,
                        montoTotal: response.montoTotal,
                        estado: response.estado
                    });
                } else {
                    reject(`La respuesta del servidor no contiene datos válidos para el pedido. Datos recibidos: ${JSON.stringify(response)}`);
                }
            },
            error: function (error) {
                reject(`Error al procesar los datos del pedido: ${JSON.stringify(error)}`);
            },
        });
    });
}

// Función para obtener detalles del cliente por su ID
function obtenerDetallesCliente(idCliente) {
    return new Promise(function (resolve, reject) {
        $.ajax({
            type: "GET",
            url: `https://herencia-api.onrender.com/personas/${idCliente}`, // Ajusta la ruta según tu API
            success: function (response) {
                console.log("Respuesta de la API (Cliente):", response);

                // Verifica si la respuesta contiene datos válidos
                if (response && response.id_persona !== undefined && response.id_persona !== null) {
                    resolve(response);
                } else {
                    reject(`La respuesta del servidor no contiene datos válidos para el cliente. Datos recibidos: ${JSON.stringify(response)}`);
                }
            },
            error: function (error) {
                reject(`Error al procesar los datos del cliente: ${JSON.stringify(error)}`);
            },
        });
    });
}
function obtenerNombreProducto(idProducto) {
    return new Promise(function (resolve, reject) {
        $.ajax({
            type: "GET",
            url: `https://herencia-api.onrender.com/productos/${idProducto}`, // Ajusta la ruta según tu API
            success: function (response) {
                console.log("Respuesta de la API (Producto):", response);

                // Verifica si la respuesta contiene datos válidos
                if (response && response.nombre !== undefined && response.nombre !== null) {
                    resolve(response.nombre);
                } else {
                    reject(`La respuesta del servidor no contiene datos válidos para el producto. Datos recibidos: ${JSON.stringify(response)}`);
                }
            },
            error: function (error) {
                reject(`Error al procesar los datos del producto: ${JSON.stringify(error)}`);
            },
        });
    });
}

// Abre el modal y carga los detalles del producto
// Abre el modal y carga los detalles del producto
async function abrirModaleditar(btn) {
    try {
        document.getElementById("overlayeditar").style.display = "block";
        document.getElementById("modaleditar").style.display = "block";

        // Obtén el ID del producto desde el botón
        const productIdToEdit = $(btn).data("product-id");
        console.log("Empezando el AJAX para el producto con ID:", productIdToEdit);

        // Realiza una solicitud AJAX para obtener los detalles del producto
        const detallesProducto = await obtenerdetallepedidoPorId(productIdToEdit);

        // Verifica si hay al menos un elemento en el array
        if (detallesProducto && detallesProducto.length > 0) {
            // Crea un array de promesas para las solicitudes AJAX
            const promises = detallesProducto.map(async (detallePedido) => {
                // Realiza otra solicitud AJAX para obtener detalles del pedido
                const pedido = await obtenerDetallesPedido(detallePedido.idPedido);
                console.log("Datos del pedido obtenidos con éxito:", pedido);

                // Realiza otra solicitud AJAX para obtener detalles del cliente
                const cliente = await obtenerDetallesCliente(pedido.id_cliente);
                console.log("Datos del cliente obtenidos con éxito:", cliente);

                // Realiza otra solicitud AJAX para obtener el nombre del producto
                const nombreProducto = await obtenerNombreProducto(detallePedido.idProducto);
                console.log("Nombre del producto obtenido con éxito:", nombreProducto);

                // Retorna un objeto con los datos que necesitas para este detalle del producto
                return {
                    detallePedido,
                    pedido,
                    cliente,
                    nombreProducto,
                };
            });

            // Espera a que todas las promesas se resuelvan
            const resultados = await Promise.all(promises);

            // Crea un array para almacenar los nombres de los productos
            const nombresProductos = [];

            // Inicializa la variable para el monto total del pedido
            let montoTotalPedido = 0;

            // Itera sobre los resultados y actualiza los elementos de texto en el modal
            for (const resultado of resultados) {
                const { detallePedido, pedido, cliente, nombreProducto } = resultado;
                console.log("Detalle del pedido obtenido con éxito:", detallePedido);

                // Agrega el nombre del producto al array
                nombresProductos.push(nombreProducto);
                
                // Actualiza los elementos de texto en el modal con los datos obtenidos
                $("#editProductos").text(nombresProductos.join(', ')); // Une los nombres con coma y espacio
                $("#editPrecioTotal").text(pedido.montoTotal); // Actualiza con el montoTotal del pedido
                $("#editCliente").text(`${cliente.nombres} ${cliente.apellidos}`);
                $("#editFecha").text(pedido.fecha);
                $("#editHora").text(pedido.hora);
                $("#editEstado").text(pedido.estado);

                // Actualiza el montoTotal del pedido
                montoTotalPedido += pedido.montoTotal;
            }

            // Puedes mostrar el montoTotalPedido en otro elemento si es necesario
            $("#montoTotalPedido").text(montoTotalPedido);
        } else {
            console.error("La respuesta del servidor no contiene datos válidos para el detalle del pedido:", detallesProducto);
            throw new Error("La respuesta del servidor no contiene datos válidos para el detalle del pedido.");
        }
    } catch (error) {
        console.error("Error al obtener detalles del producto, pedido o cliente:", error);
    }
}













    // Cierra el modal de edición
    function cerrarModaleditar() {
        document.getElementById("overlayeditar").style.display = "none";
        document.getElementById("modaleditar").style.display = "none";
    }

   //put del ajax

   function guardarCambios() {
    const idProducto = $("#editIdProducto").val();
    const nombre = $("#editNombre").val();
    const descripcion = $("#editDescripcion").val();
    const precio = $("#editPrecio").val();
    const idCategoria = $("#categoriaeditar").val();
    const imagen = $("#imageneditar")[0].files[0];

    const formData = new FormData();
    formData.append("id_producto", idProducto);
    formData.append("nombre", nombre);
    formData.append("descripcion", descripcion);
    formData.append("precio", precio);
    formData.append("id_categoria", idCategoria);
    formData.append("imagen", imagen);

    // Configuración para realizar una solicitud PUT
    $.ajax({
        type: "PUT",
        url: `https://herencia-api.onrender.com/productos/${idProducto}`,
        data: formData,
        contentType: false,
        processData: false,
        success: function (response) {
            cerrarModaleditar();
            location.reload();
        },
        error: function (error) {
            console.error("Error al actualizar los datos:", error);
        },
    });
}

</script>
       
</body>
</html>